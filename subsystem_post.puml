@startuml
class PostController <<subsystem>> {
    // create post()
    // read post()
    // update post()
    // delete post()
    // upvote post()
    // downvote post()
}

class IPostFactory <<interface>> {
    createPost(content: String, subreddit: Subreddit, user: User)
    updatePost(post: Post, newContent: String, user: User)
    deletePost(post: Post, user: User)
}

class IPostDisplay <<interface>> {
    readPost()
    upvotePost(post: Post, user: User)
    downvotePost(post: Post, user: User)
}

class PostFactory <<subsystem proxy>> {
    createPost(content: String, subreddit: Subreddit, user: User)
    updatePost(post: Post, newContent: String, user: User)
    deletePost(post: Post, user: User)
}

class PostDisplay <<subsystem proxy>> {
    readPost()
    upvotePost(post: Post, user: User)
    downvotePost(post: Post, user: User)
}

class User <<entity>>
class Post <<entity>>

PostController "0..1" --> "0..1" IPostFactory : manage posts via
PostController "0..1" --> "0..1" IPostDisplay : interact with posts via

IPostFactory <|-- PostFactory
IPostDisplay <|-- PostDisplay
IPostFactory --> User
PostFactory --> User
IPostDisplay --> User
PostDisplay --> User
IPostFactory ---> Post
PostFactory ---> Post
IPostDisplay ---> Post
PostDisplay ---> Post

@enduml
